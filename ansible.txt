configuration management

use .yml file to access the code

https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2018/11/Ansible-Cheat_Sheet_Edureka.png               --cheatsheet

playbook sample codes:     https://github.com/adithyakhamithkar/ansible-playbooks


Ansible:
it is agentless server.
does not require to save credentials.
it can be create with python or ansible code playbook

ansible ad-hoc ommands:

-i=== inventory
-m==== module
web === group name

ansible -m ping all 
ansible web -i inventory -m ping
ansible all --list-hosts
ansible web -i inventory -m command -a 'df -hk'
ansible-doc -l | more | wc -l
ansible-doc yum
ansible web -i inventory -m user -a "name={{username}} password={{ 'password' | password_hash('sha512') }}"
ansible web -i inventory -m yum -a "name=httpd state=present"
ansible web -i inventory -m service -a "name=httpd enabled=yes state=started"
ansible web -i inventory -m yum -a "name=httpd state=absent"
ansible web:db -i inventory -m service -a "name=httpd enabled=yes state=started"
ansible db -i inventory -m setup -a "filter=ansible_mounts"
ansible all -i inventory -m setup --tree ./setup
ansible prod -i hosts -a "hostname"
ansible prod -i hosts -a "df -hk"
ansible localhost -m debug -a 'var=groups.keys()'
ansible prod -m stat -a "path=/etc/environment"
ansible prod -m copy -a "src=/etc/hosts dest=/tmp/hosts"
ansible prod -m fetch -a "src=/etc/hosts dest=/root"
ansible prod -m file -a "dest=/tmp/test mode=644 state=directory"
ansible prod -m file -a "dest=/tmp/test state=absent"
ansible prod  -m shell -a "tail /var/log/messages | grep ansible-command | wc -l 


inventory:
it is a config file used for configuring the  inventory file (used for all hosts) in /etc/ansible/ans.cfg

custom config:
create a ansible.cfg
[default]
inventory=hosts

hosts:
[group_name]
ansible1 comp_ssh_hosts=192.168.1.1 ansible_python_interpreter=pythonfile/usr/bin/python

ansible -i hosts -m ping all( to check ping or not)

host selection:

ansible --list-host all
ansible --list-host hostname
ansible --list-host webserver:dbserver
ansible --list-host webserver[1:]

ansible--playbook --syntax-check mycode.yaml
ansible-doc firewalld

sample yaml file:
---
 name:sample
 hosts:websvc
 tasks:
   - name:host
     command: hostname

---
name: sample2
hosts: webserver
 tasks:
  - name: install httpd
    yum: name=httpd
  - name: enable and start httpd
    service: name=httpd enabled=true state=started
  - name: config the index.html
    copy:
     content: "start the web"
     dest: /var/ww/html
     mode: 0444
  - name: firewalld
     service: httpd
     permanent: true
     state: enabled
     immediate: yes

to set own variable:

vars:
user: Some
debug:
  name:"{{user}}"

group_vars (or)
host_vars  (or)
vars_files:
 -vars/file.yaml

file.yaml:
user:me
home/home/me

facts:(/etc/ansible/facts.d)

use (gather_facts: true) in yaml file.

it is used for configuring the os related information.
ansible node -m setup
ansible node -m setup -a 'gather_subset=devices,!all'
'filter=ansible_kernel or ansible_mem*'

create custom fact in .fact file(make it as executable)


jinja templates: (.j2)
to manage all hosts we can use these templates to alter the yaml config file.

assemble:
used for combine two files with single file

task delegation:
used for running tasks other than the configured hosts.
use (delegate_to: localhost)

ansible block:
to execute group of tasks.
used for error handling with rescue and always ststements.

ansible vault:
ansible-vault encrypt_string --ask-vault-pas -name 'ansible_become_pass' 'admin@123'(password)

ansible --ask-vault-pass all -m ping -o

ansible-vault encrypt --ask-vault-pass filename

ansible custom modules:
download (git clone https://github.com/ansible/ansible.git)
~/src/ansible/hacking/test-module -m ./tmp.sh
